[{"/Users/myosotis/dreamcoding/react/basic/src/index.js":"1","/Users/myosotis/dreamcoding/react/basic/src/reportWebVitals.js":"2","/Users/myosotis/dreamcoding/react/basic/src/basic/AppProducts.jsx":"3","/Users/myosotis/dreamcoding/react/basic/src/basic/components/Products.jsx":"4","/Users/myosotis/dreamcoding/react/basic/src/basic/hooks/use-producs.jsx":"5"},{"size":565,"mtime":1688562423972,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1688562423974,"results":"8","hashOfConfig":"7"},{"size":361,"mtime":1688562423966,"results":"9","hashOfConfig":"7"},{"size":841,"mtime":1688654384578,"results":"10","hashOfConfig":"7"},{"size":783,"mtime":1688654545971,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"htu3r9",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/myosotis/dreamcoding/react/basic/src/index.js",[],[],"/Users/myosotis/dreamcoding/react/basic/src/reportWebVitals.js",[],[],"/Users/myosotis/dreamcoding/react/basic/src/basic/AppProducts.jsx",[],[],"/Users/myosotis/dreamcoding/react/basic/src/basic/components/Products.jsx",["28"],[],"import React, { useEffect, useState } from \"react\";\nimport useProducts from \"../hooks/use-producs\";\n\nexport default function Products() {\n  const [checked, setChecked] = useState(false);\n  const [loading, error, products] = useProducts(checked);\n  const handleChange = () => setChecked((prev) => !prev);\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>{error}</p>;\n\n  return (\n    <>\n      <input\n        id=\"checkbox\"\n        type=\"checkbox\"\n        value={checked}\n        onChange={handleChange}\n      />\n      <label htmlFor=\"checkbox\">Show Only ðŸ”¥ Sale</label>\n      <ul>\n        {products.map((product) => (\n          <li key={product.id}>\n            <article>\n              <h3>{product.name}</h3>\n              <p>{product.price}</p>\n            </article>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","/Users/myosotis/dreamcoding/react/basic/src/basic/hooks/use-producs.jsx",[],[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]